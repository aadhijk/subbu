Code:

module bcd_excess3(bcd,excess_3);

input [3:0] bcd;
output reg [3:0] excess_3;

always @ (bcd)
begin
   case ({bcd})
   4'b0000: excess_3 = 4'b0011;  
   4'b0001: excess_3 = 4'b0100;
   4'b0010: excess_3 = 4'b0101;
   4'b0011: excess_3 = 4'b0110;
   4'b0100: excess_3 = 4'b0111;
   4'b0101: excess_3 = 4'b1000;
   4'b0110: excess_3 = 4'b1001;
   4'b0111: excess_3 = 4'b1010;
   4'b1000: excess_3 = 4'b1011;
   4'b1001: excess_3 = 4'b1100;
   default: excess_3 = 4'bxxxx;
   endcase
end
endmodule

Test Bench:

module bcd_excess3_tb();
wire [3:0] excess_3;
reg [3:0]bcd;
bcd_excess3 dut(.bcd(bcd),.excess_3(excess_3));
initial begin
  bcd=4'b0000;
  #20
  bcd=4'b0001;
  #20
  bcd=4'b0010;
  #20
  bcd=4'b0100;
  #20
  bcd=4'b0111;
  #20
  bcd=4'b1001;
  #20
  bcd=4'b1111;
end
initial #140 $finish; 
endmodule
