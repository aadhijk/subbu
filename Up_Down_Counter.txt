Code:

module up_down_counter(clk,rst,up_down,count);

input clk,rst,up_down;
output reg [3:0] count;


always @ (posedge clk or posedge rst)
begin
    if (rst==1'b1)
    begin
       count <= 4'b0000;
    end
    else if(up_down == 1'b1) 
    begin
       if (count == 4'b1111)
            count <= 4'b0000;
       else
            count <= count+1;
    end
    else
    begin
        if (count == 4'b0000)
            count <= 4'b1111;
        else
            count <= count-1;   
    end
end
endmodule

Test Bench:


module up_down_counter_tb();
reg clk,up_down,rst;
wire [3:0] count;

up_down_counter dut(.clk(clk),.up_down(up_down),.rst(rst),.count(count));
initial clk=1;
always #5 clk=~clk;
initial begin
rst=1'b1;
#5
up_down= 1'b0; rst =1'b0;
#100
up_down= 1'b1; rst =1'b0;
#100
$finish;
end
endmodule