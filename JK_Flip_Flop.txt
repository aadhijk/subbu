Code:

module JK_FF(
    input J,
    input K,
    input clk,
    output reg Q,
    output Q_bar
    );
    always@(posedge clk) begin
    
     case({J,K})
       2'b00: Q <= Q;
       2'b01: Q <= 1'b0;
       2'b10: Q <= 1'b1;
       2'b11: Q <= ~Q;
     endcase
     end
     assign Q_bar = ~Q;   
endmodule

Test Bench:

module JK_FF_tb();
 reg clk,J,K;
 wire Q,Q_bar;
  
  
  JK_FF dut(.J(J),.K(K),.clk(clk),.Q(Q),.Q_bar(Q_bar));
 
  initial begin
      clk=1'b1;
   end
   always #10 clk = ~clk;
 initial begin
         J = 1'b1;
         K = 1'b0;
         #20
         J = 1'b0;
         K = 1'b0;
         #20
         J = 1'b1;
         K = 1'b1;
         #20
         J = 1'b0;
         K = 1'b1;
         #20
         J = 1'b0;
         K = 1'b0;
         end
         initial #100 $finish;
endmodule
