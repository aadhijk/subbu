module jk(input j,k,clk,rst,output reg q);
always @(posedge clk)begin
if(rst)begin
q=0;end
case({j,k})
2'd0:q=q;
2'd1:q=0;
2'd2:q=1;
2'd3:q=~q;
endcase
end
endmodule

module jkfsm(input x,y,clk,rst,output a

    );
    wire j,k;
    assign j=x^y;
    assign k=x^y;
    jk jk1(j,k,clk,rst,a);
    
    
endmodule
module tb(

    );
    reg x,y,clk,rst;
    wire a;
    jkfsm dut(x,y,clk,rst,a);
    always #5 clk=~clk;
    initial begin
    clk=0;
    rst=1;#10
    rst=0;
    x=0;y=0;#10
    x=1;y=0;#10
    $finish;
    end
    
endmodule